//set name and email

git config --global user.name "Shadab"

git config --global user.email "akhtarshadab415@gmai.com"


//view all details

git config --list

//view user name

git config user.name

//view user email

git config user.email


//set text editor

git config --global core.editor emacs


git config --global core.editor vim

//to see status

git status //also return if some new content added to file and commited or staged


//initializing repository

git init

//staging all file

git add file.txt

git add --a

git add .

//commit

git commit  //without message it will open new window

git commit -m "First commit"	//commit with message


//git log (return necessary commit logs)

git log
git lop -p
git log -p -n (n is the n numbers to see the number of logs changed)
git log --stat
git log --pretty=oneline
git log --pretty=short
git log --pretty=full
git log --since=2.days
git log --since=2.weeks
git log --since=2.months
git log --since=2.years

https://git-scm.com/docs/git-log
git log --pretty=format: "%h -- %a"


//delete the git
rm -rf .git

//ignore file
touch .gitignore //create ignore file and the file name to be ignore in it example: error.log, 
		*.log to ignore all file with extension .log
		/dir/ to ignore whole directory(folder)
		dir/ to ignore all directory name with dir
git add .gitignore //for staging .gitignore file


//give the difference (comparing) between staging area and working update
git diff

git diff --staged //compare with last commit to current staged

//to skip the staged area and direct commit but newly added file has to be added
git commit -a -m "skipping staging area and direct commiting"




//remove file
git rm xyz.txt

// move rename
git mv first.txt firstrename.txt

//it will stop tracking the file which was previuosly added to staged before adding to .gitignore
git rm --cached xyz.txt


//to change in previous commit
git commit --amend

git  push --force //mostly used after amend i.e. changing in last commit 

//to unstage
git restore --staged xyz.txt

//to undo changes in the file (accidental use)
git checkout -- xyz.txt
git checkout -f

//remote repository
git remote
git remote -v
git remote add origin https://github.com/Legend-Fashion/REGAL-GARMENT.git

//push repository to remote

git push -u origin master

//creating ssh key

ssh-keygen -t rsa -b 4096 -C "legendsfashion2017@gmail.com

//start ssh service

eval $(ssh-agent -s)

//saving generated ssh

ssh-add ~/.ssh/id_rsa

//retrieve ssh key

tail ~/.ssh/id_rsa.pub



//creating alias (shortcut for commands OR custom command)
git config --global alias.ci commit

//discard changes in working directory

git restore this.txt

//show the present branches

git branch

//create new branch and switch to it 

git checkout -b bugfix

//switching to branches

git checkout bugfix


//push other branches to remote (eother than master branch)
git push origin bugfix